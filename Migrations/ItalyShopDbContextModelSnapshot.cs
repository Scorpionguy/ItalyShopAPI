// <auto-generated />
using System;
using ItalyShopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ItalyShopAPI.Migrations
{
    [DbContext(typeof(ItalyShopDbContext))]
    partial class ItalyShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ItalyShopAPI.Models.Category", b =>
                {
                    b.Property<int>("idCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_category");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idCategory"));

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idCategory");

                    b.ToTable("category");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Client", b =>
                {
                    b.Property<string>("idClient")
                        .HasColumnType("text")
                        .HasColumnName("id_client");

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<string>("cFamily")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("c_family");

                    b.Property<string>("cMail")
                        .HasColumnType("text")
                        .HasColumnName("c_mail");

                    b.Property<string>("cName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("c_name");

                    b.Property<string>("cOtchestvo")
                        .HasColumnType("text")
                        .HasColumnName("c_otchestvo");

                    b.Property<string>("cPhone")
                        .HasColumnType("text")
                        .HasColumnName("c_phone");

                    b.Property<string>("index")
                        .HasColumnType("text");

                    b.HasKey("idClient");

                    b.ToTable("client");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Employee", b =>
                {
                    b.Property<int>("idEmp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_empl");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idEmp"));

                    b.Property<string>("eFamily")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("e_family");

                    b.Property<string>("eName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("e_name");

                    b.Property<string>("eOtchestvo")
                        .HasColumnType("text")
                        .HasColumnName("e_otchestvo");

                    b.Property<int>("jobTitleFk")
                        .HasColumnType("integer")
                        .HasColumnName("job_title_fk");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idEmp");

                    b.HasIndex("jobTitleFk");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Good", b =>
                {
                    b.Property<int>("article")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("article"));

                    b.Property<DateTime?>("addDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("add_date");

                    b.Property<int>("categoryFk")
                        .HasColumnType("integer")
                        .HasColumnName("category_fk");

                    b.Property<string>("gName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("g_name");

                    b.Property<int>("gQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("g_quantity");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<bool>("isNew")
                        .HasColumnType("boolean")
                        .HasColumnName("is_new");

                    b.Property<string>("model")
                        .HasColumnType("text");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<int?>("sale")
                        .HasColumnType("integer");

                    b.HasKey("article");

                    b.HasIndex("categoryFk");

                    b.ToTable("goods");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Logs", b =>
                {
                    b.Property<int>("idLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_log");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idLog"));

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("idEmpFk")
                        .HasColumnType("integer")
                        .HasColumnName("id_emp_fk");

                    b.Property<DateTime>("logDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("log_date");

                    b.Property<TimeSpan>("logTime")
                        .HasColumnType("interval")
                        .HasColumnName("log_time");

                    b.HasKey("idLog");

                    b.HasIndex("idEmpFk");

                    b.ToTable("log");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Order", b =>
                {
                    b.Property<string>("idOrder")
                        .HasColumnType("text")
                        .HasColumnName("id_order");

                    b.Property<string>("idClientFk")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("id_client_fk");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<string>("paymentStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("payment_status");

                    b.Property<double>("totalAmount")
                        .HasColumnType("double precision")
                        .HasColumnName("total_amount");

                    b.HasKey("idOrder");

                    b.HasIndex("idClientFk");

                    b.ToTable("order");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.OrderItem", b =>
                {
                    b.Property<int>("idItems")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_items");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idItems"));

                    b.Property<int>("articleFk")
                        .HasColumnType("integer")
                        .HasColumnName("article_fk");

                    b.Property<int>("oQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("o_quantity");

                    b.Property<string>("orderIdFk")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("order_id_fk");

                    b.Property<double>("priceAtPurchase")
                        .HasColumnType("double precision")
                        .HasColumnName("price_at_purchase");

                    b.HasKey("idItems");

                    b.HasIndex("articleFk");

                    b.HasIndex("orderIdFk");

                    b.ToTable("order_items");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Title", b =>
                {
                    b.Property<int>("idTitle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_title");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idTitle"));

                    b.Property<string>("titleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title_name");

                    b.HasKey("idTitle");

                    b.ToTable("title");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Employee", b =>
                {
                    b.HasOne("ItalyShopAPI.Models.Title", "jobTitle")
                        .WithMany("employees")
                        .HasForeignKey("jobTitleFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jobTitle");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Good", b =>
                {
                    b.HasOne("ItalyShopAPI.Models.Category", "category")
                        .WithMany("goods")
                        .HasForeignKey("categoryFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Logs", b =>
                {
                    b.HasOne("ItalyShopAPI.Models.Employee", "employee")
                        .WithMany("logs")
                        .HasForeignKey("idEmpFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Order", b =>
                {
                    b.HasOne("ItalyShopAPI.Models.Client", "client")
                        .WithMany("orders")
                        .HasForeignKey("idClientFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.OrderItem", b =>
                {
                    b.HasOne("ItalyShopAPI.Models.Good", "good")
                        .WithMany("orderItems")
                        .HasForeignKey("articleFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItalyShopAPI.Models.Order", "order")
                        .WithMany("orderItems")
                        .HasForeignKey("orderIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("good");

                    b.Navigation("order");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Category", b =>
                {
                    b.Navigation("goods");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Client", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Employee", b =>
                {
                    b.Navigation("logs");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Good", b =>
                {
                    b.Navigation("orderItems");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Order", b =>
                {
                    b.Navigation("orderItems");
                });

            modelBuilder.Entity("ItalyShopAPI.Models.Title", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
